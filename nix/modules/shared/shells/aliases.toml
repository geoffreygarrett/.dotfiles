# Shell Aliases Configuration

[meta]
shells = ["zsh", "bash", "fish", "nu"]

[packages]
eza = "pkgs.eza"
feh = "pkgs.feh"
bat = "pkgs.bat"
neovim = "pkgs.neovim"
fd = "pkgs.fd"
ripgrep = "pkgs.ripgrep"
htop = "pkgs.htop"
duf = "pkgs.duf"
ncdu = "pkgs.ncdu"
prettyping = "pkgs.prettyping"
viddy = "pkgs.viddy"
kubectl = "pkgs.kubectl"
podman-compose = "pkgs.podman-compose"
viu = "pkgs.viu"
neofetch = "pkgs.neofetch"

[aliases]

[aliases.neofetch]
dependency = "neofetch"
command = ""
description = "Show system information."
shells = ["zsh", "nu"]

[aliases.ls]
dependency = "eza"
command = "--icons --group-directories-first"
description = "List directory contents with icons and directories first."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.ll]
dependency = "eza"
command = "-alF --icons --group-directories-first"
description = "List all files with detailed view."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.l]
dependency = "eza"
command = "-a --icons --group-directories-first"
description = "List all files including hidden ones."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.tree]
dependency = "eza"
command = "--tree --icons"
description = "List files in a tree view."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.cat]
dependency = "bat"
command = "--style=plain --paging=never"
description = "Concatenate and display files with syntax highlighting."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.nvim]
dependency = "neovim"
command = ""
description = "Launch Neovim."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.holdnvim]
dependency = "neovim"
command = ""
description = "Alias for Neovim."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.n]
dependency = "neovim"
command = ""
description = "Alias for Neovim."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.less]
dependency = "bat"
command = ""
description = "View files with syntax highlighting."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.grep]
dependency = "ripgrep"
command = ""
description = "Search for patterns in files."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.find]
dependency = "fd"
command = ""
description = "Find files and directories."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.top]
dependency = "htop"
command = ""
description = "Display dynamic real-time information about running processes."
shells = ["zsh", "nu"]

[aliases.df]
dependency = "duf"
command = ""
description = "Disk usage and space analyzer."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.du]
dependency = "ncdu"
command = ""
description = "Disk usage analyzer with an ncurses interface."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.ping]
dependency = "prettyping"
command = ""
description = "Ping a host with pretty output."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.watch]
dependency = "viddy"
command = ""
description = "Monitor the output of a program every few seconds."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.sudoe]
command = "sudo -E -s"
description = "Run a command with elevated privileges while preserving the environment."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.tb]
command = "nc termbin.com 9999"
description = "Paste text to termbin.com."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.pingt]
command = "ping -c 5 google.com"
description = "Ping Google 5 times."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.pingd]
command = "ping -c 5 8.8.8.8"
description = "Ping DNS 5 times."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.gitlog]
command = "git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'"
description = "Show git commit history as a graph."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.gitlines]
command = "git ls-files | xargs wc -l"
description = "Count lines of code in the repository."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.dirsize]
command = "du -sh $PWD/*"
description = "Show the size of directories in the current path."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.k]
dependency = "kubectl"
command = ""
description = "Alias for kubectl."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.pc]
dependency = "podman-compose"
command = ""
description = "Alias for podman-compose."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.viu]
dependency = "viu"
command = ""
description = "Alias for viu."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.kpods]
dependency = "kubectl"
command = "get pods --all-namespaces | grep -v 'kube-system'"
description = "Get all Kubernetes pods excluding the kube-system namespace."
shells = ["zsh", "bash", "fish", "nu"]

[aliases.prb]
command = "cat ~/Downloads/out2.xlsx | from xlsx"
description = "Show PRBs"
shells = ["nu"]

[aliases.delete-images]
command = '''
f() {
  delete_image() {
    if rm -i "$1"; then
      echo "Deleted: $1"
    else
      echo "Deletion cancelled for: $1"
    fi
  }
  export -f delete_image
  fd --extension jpg --extension png --base-directory "$1" | \
  fzf --preview "${pkgs.viu}/bin/viu --width 80 \"$1/{}\""  \
      --preview-window=right:81:wrap \
      --bind "enter:execute(delete_image \"$1/{}\")+reload(fd --extension jpg --extension png --base-directory \"{}\")"
}; f
'''
description = "Delete images interactively."
shells = ["zsh", "bash", "fish", "nu"]

# NOTE: This is how to do literal expressions in nix derived from the above ^
#     package = mkOption {
#      type = types.package;
#      default = pkgs.gh;
#      defaultText = literalExpression "pkgs.gh";
#      description = "Package providing {command}`gh`.";
#    };
