{ config, pkgs, ... }:

let
  keys = [ "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIITvBraRmM6IvQFt8VUHRx9hZ5DZVkPX3ORlfVqGa05z" ];
  hyperfluent-theme = pkgs.fetchFromGitHub {
    owner = "Coopydood";
    repo = "HyperFluent-GRUB-Theme";
    rev = "v1.0.1";
    sha256 = "0gyvms5s10j24j9gj480cp2cqw5ahqp56ddgay385ycyzfr91g6f";
  };
  # Screen configuration
  screens = [
    {
      output = "DP-1";
      mode = "2560x1440";
      rate = "144";
      primary = true;
    }
    {
      output = "HDMI-2";
      mode = "3840x2160";
      rate = "60";
      primary = false;
    }
  ];
  primaryScreen = builtins.head (builtins.filter (s: s.primary) screens);
in
{
  imports = [ ./hardware-configuration.nix ];

  # System-wide configurations
  system.stateVersion = "24.05";
  time.timeZone = "Africa/Johannesburg";
  i18n.defaultLocale = "en_GB.UTF-8";
  boot.binfmt.emulatedSystems = [ "aarch64-linux" ];

  # Bootloader and kernel parameters
  boot = {
    kernelParams = builtins.concatMap
      (s: [
        "video=${s.output}:${s.mode}@${s.rate}"
      ])
      screens ++ [
      "console=tty0"
      "console=ttyS0,115200n8"
    ];
    loader = {
      systemd-boot.enable = false;
      efi = {
        canTouchEfiVariables = false;
        efiSysMountPoint = "/boot/efi";
      };
      grub = {
        enable = true;
        device = "nodev";
        efiSupport = true;
        efiInstallAsRemovable = true;
        useOSProber = true;
        gfxmodeEfi = primaryScreen.mode;
        theme = "${hyperfluent-theme}/nixos";
        extraConfig = ''
          GRUB_DEFAULT=saved
          GRUB_SAVEDEFAULT=true
        '';
      };
    };
  };

  # File systems configuration
  fileSystems."/boot/efi" = {
    device = "/dev/nvme0n1p1";
    fsType = "vfat";
    options = [ "defaults" "noatime" "nofail" ];
  };

  # Networking configuration
  networking = {
    hostName = "apollo";
    networkmanager.enable = true;
    interfaces = {
      enp0s31f6.wakeOnLan.enable = true;
      tailscale0.wakeOnLan.enable = true;
    };
    firewall = {
      enable = true;
      allowedTCPPorts = [ 22 80 443 ];
      allowedUDPPorts = [ 53 41641 ];
      trustedInterfaces = [ "tailscale0" "enp0s31f6" ];
      allowedUDPPortRanges = [{ from = 41641; to = 41641; }];
    };
  };

  # Services configuration
  services = {
    tailscale.enable = true;
    xserver = {
      enable = true;
      videoDrivers = [ "nvidia" ];
      screenSection = ''
        Option       "metamodes" "nvidia-auto-select +0+0 {ForceFullCompositionPipeline=On}"
        Option       "AllowIndirectGLXProtocol" "off"
        Option       "TripleBuffer" "on"
      '';
      displayManager = {
        defaultSession = "none+bspwm";
        lightdm = {
          enable = true;
          greeters.slick.enable = true;
          background = ../../modules/nixos/login-wallpaper.png;
        };
        sessionCommands = ''
          ${builtins.concatStringsSep "\n" (builtins.map (s: 
            "${pkgs.xorg.xrandr}/bin/xrandr --output ${s.output} --mode ${s.mode} --rate ${s.rate} ${if s.primary then "--primary" else ""}"
          ) screens)}
          ${pkgs.feh}/bin/feh --bg-scale ${pkgs.nixos-artwork.wallpapers.nineish-dark-gray.gnomeFilePath}
        '';
      };
      windowManager.bspwm = {
        enable = true;
        configFile = "/etc/bspwmrc";
        sxhkd.configFile = "/etc/sxhkdrc";
      };
      libinput.enable = true;
      xkb = {
        layout = "us";
        options = "ctrl:nocaps";
      };
    };
    printing.enable = true;
    pipewire = {
      enable = true;
      alsa = {
        enable = true;
        support32Bit = true;
      };
      pulse.enable = true;
    };
    hardware.openrgb.enable = true;
    openssh = {
      enable = true;
      settings = {
        PermitRootLogin = "no";
        PasswordAuthentication = false;
      };
    };
    picom.enable = true;
  };

  # Hardware configuration
  hardware = {
    nvidia = {
      modesetting.enable = true;
      open = false;
      nvidiaSettings = true;
      package = config.boot.kernelPackages.nvidiaPackages.stable;
    };
    pulseaudio.enable = false;
  };

  # User configuration
  users.users = {
    geoffrey = {
      isNormalUser = true;
      description = "Geoffrey Garrett";
      extraGroups = [ "networkmanager" "wheel" "docker" "tailscale" ];
      shell = pkgs.zsh;
      openssh.authorizedKeys.keys = keys;
    };
    root.openssh.authorizedKeys.keys = keys;
  };

  # System packages
  environment.systemPackages = with pkgs; [
    tailscale
    openrgb-with-all-plugins
    gitAndTools.gitFull
    linuxPackages.v4l2loopback
    v4l-utils
    inetutils
    xorg.xrandr
    (writeScriptBin "reboot-to-windows" ''
      #!${pkgs.stdenv.shell}
      windows_menu_entry=$(grep menuentry /boot/grub/grub.cfg | grep -i windows | cut -d "'" -f2)
      sudo grub-reboot "$windows_menu_entry" && sudo reboot
    '')
  ];

  # Programs
  programs = {
    firefox.enable = true;
    zsh.enable = true;
  };

  # Font configuration
  fonts.packages = with pkgs; [
    roboto
    dejavu_fonts
    jetbrains-mono
    font-awesome
    noto-fonts
    noto-fonts-emoji
    (nerdfonts.override { fonts = [ "JetBrainsMono" ]; })
  ];

  # Nix settings
  nix = {
    settings = {
      auto-optimise-store = true;
      experimental-features = [ "nix-command" "flakes" ];
    };
    gc = {
      automatic = true;
      dates = "weekly";
      options = "--delete-older-than 30d";
    };
  };
}
